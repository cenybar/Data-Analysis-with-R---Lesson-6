library(ggplot2)
data("diamonds")
summary(diamonds)
?diamonds
str(diamonds)
diamonds$color
ggplot(data = diamonds, aes(x=price)) + geom_histogram()
table(price)
summary(diamonds$price)
summary(diamonds$price < 500)
summary(diamonds$price >= 15000)
summary(diamonds$price < 250)
ggplot(data = diamonds, aes(x = price), binwidth=100) +
scale_x_continuous(limits = c(0, 8000), breaks = seq(0, 8000, 100)) +
xlab('Price') +
ylab('Diamond count')
+  scale_x_continuous(limits = c(0, 8000), breaks = seq(0, 8000, 100)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price), binwidth=100) + geom_histogram() +  scale_x_continuous(limits = c(0, 8000), breaks = seq(0, 8000, 100)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price), binwidth=100) + geom_histogram() +  scale_x_continuous(limits = c(0, 8000), breaks = seq(0, 8000, 1000)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price), binwidth=100) + geom_histogram() +  scale_x_continuous(limits = c(0, 2000), breaks = seq(0, 8000, 1000)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price), binwidth=10) + geom_histogram() +  scale_x_continuous(limits = c(0, 2000), breaks = seq(0, 8000, 1000)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price), binwidth=10) + geom_histogram() +  scale_x_continuous(limits = c(0, 2000), breaks = seq(0, 2000, 100)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price), binwidth=10) + geom_histogram() +  scale_x_continuous(limits = c(300, 2000), breaks = seq(0, 2000, 100)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price), binwidth=10) + geom_histogram() +  scale_x_continuous(limits = c(300, 2000), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price), binwidth=1) + geom_histogram() +  scale_x_continuous(limits = c(300, 2000), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price), binwidth=50) + geom_histogram() +  scale_x_continuous(limits = c(300, 2000), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price), binwidth=30) + geom_histogram() +  scale_x_continuous(limits = c(300, 2000), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price), binwidth=1000) + geom_histogram() +  scale_x_continuous(limits = c(300, 2000), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 100) +  scale_x_continuous(limits = c(300, 2000), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) +  scale_x_continuous(limits = c(300, 2000), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 1) +  scale_x_continuous(limits = c(300, 2000), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 30) +  scale_x_continuous(limits = c(300, 2000), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 1) +  scale_x_continuous(limits = c(300, 2000), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
str(diamonds$price < 2000)
summary(diamonds$price < 2000)
table(diamonds$price < 2000)
subset(diamonds, diamonds$price < 2000)
summary(subset)
under2000 <- subset(diamonds, diamonds$price < 2000)
summary(under2000)
summary(under2000$price)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 1) +  scale_x_continuous(limits = c(300, 650), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 1) +  scale_x_continuous(limits = c(600, 650), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 1) +  scale_x_continuous(limits = c(600, 650), breaks = seq(0, 2000, 1)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 1) +  scale_x_continuous(limits = c(600, 650), breaks = seq(0, 2000, 5)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 1) +  scale_x_continuous(limits = c(250, 2000), breaks = seq(0, 2000, 5)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 100) +  scale_x_continuous(limits = c(250, 2000), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) +  scale_x_continuous(limits = c(250, 2000), breaks = seq(0, 2000, 200)) +
xlab('Price') +
ylab('Diamond count')
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + facet_wrap(~cut)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous(limits = c(250, 10000) + facet_wrap(~cut)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous(limits = c(250, 10000) + facet_wrap(~cut)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous(limits = c(250, 10000)) + facet_wrap(~cut)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous(limits = c(250, 10000), seq(0, 10000, 2000)) + facet_wrap(~cut)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous(limits = c(250, 10000), seq(250, 10000, 2000)) + facet_wrap(~cut)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous(limits = c(250, 5000), seq(250, 10000, 2000)) + facet_wrap(~cut)
table(diamonds$price)
by (diamonds$cut, diamonds$price, sum)
table(diamonds$price)
by (diamonds$cut, diamonds$price, sum)
View(diamonds)
by (diamonds$cut, diamonds$price, count)
by (diamonds$cut, diamonds$price, summary)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous(seq(250, 10000, 2000)) + facet_wrap(~cut)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous( c(5000,), seq(250, 10000, 2000)) + facet_wrap(~cut)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous( c(5000,5000000), seq(250, 10000, 2000)) + facet_wrap(~cut)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous( c(5000,5000000)) + facet_wrap(~cut)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous( c(5000,200000)) + facet_wrap(~cut)
table(diamonds$price)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + facet_wrap(~cut)
summary(diamonds$price)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous(limits = c(5000, 18823), breaks = seq(5000, 20000, 200)) + facet_wrap(~cut)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous(limits = c(5000, 18823), breaks = seq(5000, 20000, 2000)) + facet_wrap(~cut)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + scale_x_continuous(limits = c(5000, 18823), breaks = seq(10000, 20000, 2000)) + facet_wrap(~cut)
summary(diamonds$price, cut=='Fair')
summary(diamonds$price, cut=='Fair')
summary(diamonds$price, cut=='Good')
summary(diamonds$price, cut=='Very Good')
summary(diamonds$price, cut=='Premium')
summary(diamonds$price, cut=='Ideal')
summary(diamonds$price, cut == 'Fair')
summary(diamonds$price, cut == 'Good')
summary(diamonds$price, cut = 'Good')
by(diamonds$price,diamonds$cut,summary)
by(diamonds$cut,diamonds$price,summary)
by(diamonds$price,diamonds$cut,summary)
by(diamonds$price,diamonds$cut,summary)
?by
remove(under2000)
gglpot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + facet_grid(cut~)
gglpot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + facet_grid(cut~.)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10) + facet_grid(cut~.)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10, color="blue") + facet_grid(cut~.)
ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10, color="blue") + facet_grid(cut~.) + scale_x_continuous(limits = c(200,5000))
library(gridExtra)
p1 = ggplot(data = diamonds, aes(x = price)) + geom_histogram(binwidth = 10, color="blue") + facet_grid(cut~.) + scale_x_continuous(limits = c(200,5000))
p2 = p1 + scale_x_log10()
p3 = p1 + scale_x_sqrt()
grid.arrange(p1,p2,p3, ncol=3)
p1 = ggplot(data = diamonds, aes(x = price/carat)) + geom_histogram(binwidth = 10, color="blue") + facet_grid(cut~.) + scale_x_continuous(limits = c(200,5000))
p2 = p1 + scale_x_log10()
grid.arrange(p1,p2, ncol=2)
p1 = ggplot(data = diamonds, aes(x = price/carat)) + geom_histogram(binwidth = 0.05, color="blue") + facet_grid(cut~.) + scale_x_continuous(limits = c(200,5000))
p2 = p1 + scale_x_log10()
grid.arrange(p1,p2, ncol=2)
p1 = ggplot(data = diamonds, aes(x = price/carat)) + geom_histogram(binwidth = 10, color="blue") + facet_grid(cut~.) + scale_x_continuous(limits = c(200,5000))
p2 = p1 + scale_x_log10()
grid.arrange(p1,p2, ncol=2)
p2 = p1 + scale_x_log10() + geom_histogram(binwidth = 0.05)
grid.arrange(p1,p2, ncol=2)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.05,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Carat, facet by Cut.") +
scale_x_log10() +
facet_grid(. ~ cut)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.5,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Carat, facet by Cut.") +
scale_x_log10() +
facet_grid(. ~ cut)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.9,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Carat, facet by Cut.") +
scale_x_log10() +
facet_grid(. ~ cut)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.05,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Carat, facet by Cut.") +
scale_x_log10() +
facet_grid(. ~ cut)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.05,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Carat, facet by Cut.") +
scale_x_log10() +
facet_grid(~. cut)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.05,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Carat, facet by Cut.") +
scale_x_log10() +
facet_grid(~ . cut)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.05,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Carat, facet by Cut.") +
scale_x_log10() +
facet_grid(. ~cut)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.05,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Carat, facet by Cut.") +
scale_x_log10() +
facet_grid( ~.cut)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.05,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Carat, facet by Cut.") +
scale_x_log10() +
facet_grid(. ~cut)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.05,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Carat, facet by Cut.") +
scale_x_log10() +
facet_grid(cut ~ .)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.05,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Carat, facet by Cut.") +
scale_x_log10() +
facet_grid(~ .cut)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.05,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Carat, facet by Cut.") +
scale_x_log10() +
facet_grid(. ~cut)
by(diamonds$price, diamonds$color, summary)
ggplot(diamonds) + geom_boxplot(aes(x = color,  y = price, fill = color)) +
coord_cartesian(ylim = c(0, 8000)) +
scale_y_continuous(breaks = seq(0,8000,500)) +
ggtitle("Diamonds Price by Color.")
ggplot(diamonds) + geom_boxplot(aes(x = clarity,  y = price, fill = color)) +
coord_cartesian(ylim = c(0, 8000)) +
scale_y_continuous(breaks = seq(0,8000,500)) +
ggtitle("Diamonds Price by Color.")
ggplot(diamonds) + geom_boxplot(aes(x = clarity,  y = price, fill = clarity)) +
coord_cartesian(ylim = c(0, 8000)) +
scale_y_continuous(breaks = seq(0,8000,500)) +
ggtitle("Diamonds Price by Color.")
ggplot(diamonds) + geom_boxplot(aes(x = cut,  y = price, fill = cut)) +
coord_cartesian(ylim = c(0, 8000)) +
scale_y_continuous(breaks = seq(0,8000,500)) +
ggtitle("Diamonds Price by Color.")
)
ggplot(diamonds) + geom_boxplot(aes(x = cut,  y = price) +
ggplot(diamonds) + geom_boxplot(aes(x = cut,  y = price) +
ggplot(diamonds) + geom_boxplot(aes(x = cut,  y = price, fill = cut)) +
coord_cartesian(ylim = c(0, 8000)) +
scale_y_continuous(breaks = seq(0,8000,500)) +
ggtitle("Diamonds Price by Color.")
by(diamonds$price,diamonds$cut,summary)
by(diamonds$price,diamonds$color,summary)
by(diamonds$price, diamonds$color, IQR)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.05,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Carat, facet by Cut.") +
scale_x_log10() +
facet_grid(. ~cut)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 0.05,
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Color, facet by Cut.") +
scale_x_log10() +
facet_grid(. ~color)
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Color, facet by Cut.") + facet_grid(. ~color)
color = "black", fill = "lightblue") +
ggtitle("Histogram of Price per Color, facet by Cut.") + facet_grid(. ~color)
ggplot(diamonds) + geom_histogram(aes(x=price/carat), binwidth = 1, color = "black", fill = "lightblue") + facet_grid(. ~color)
ggplot(diamonds) + geom_boxplot(aes(x=color,y=price/carat, fill=color)) +
scale_y_continuous(breaks = seq(0,8000,500)) +
coord_cartesian(ylim = c(0,8000)) +
ylab("Price per Carat") +
ggtitle("Price per Carat by Color")
ggplot(diamonds) + geom_boxplot(aes(x=color,y=price/carat, fill=color)) +
scale_y_continuous(breaks = seq(0,8000,500)) +
coord_cartesian(ylim = c(0,8000)) +
ylab("Price per Carat") +
ggtitle("Price per Carat by Color")
ggplot(diamonds) + geom_boxplot(aes(x=color,y=price/carat, fill=color)) +
scale_y_continuous(breaks = seq(0,8000,500)) +
coord_cartesian(ylim = c(0,8000)) +
ylab("Price per Carat") +
ggtitle("Price per Carat by Color")
ggplot(diamonds) + geom_boxplot(aes(x = cut,  y = price, fill = cut)) +
coord_cartesian(ylim = c(0, 8000)) +
scale_y_continuous(breaks = seq(0,8000,500)) +
ggtitle("Diamonds Price by Color.")
ggplot(diamonds) + geom_boxplot(aes(x=color,y=price/carat, fill=color)) +
scale_y_continuous(breaks = seq(0,8000,500)) +
coord_cartesian(ylim = c(0,8000)) +
ylab("Price per Carat") +
ggtitle("Price per Carat by Color")
View(diamonds)
summary(diamonds$carat)
ggplot(data = diamonds, x = carat) + geom_freqpoly(binwidth=0,1)
ggplot(data = diamonds, x = carat) + geom_freqpoly(binwidth=0,1)
ggplot(data = diamonds, aes(x = carat)) + geom_freqpoly(binwidth=0,1)
ggplot(data = diamonds) + geom_freqpoly(aes(x=carat), binwidth=0,1)
ggplot(diamonds) + geom_freqpoly(aes(x=carat), binwidth=0,1)
gplot(diamonds) + geom_freqpoly(aes(x = carat), binwidth = 0.02) +
scale_x_continuous(breaks = seq(0,5,0.1)) +
geom_hline(y = 2000,color = "red") +
ggtitle("Carat Frequency Polygon")
ggplot(diamonds) + geom_freqpoly(aes(x = carat), binwidth = 0.02) +
scale_x_continuous(breaks = seq(0,5,0.1)) +
geom_hline(y = 2000,color = "red") +
ggtitle("Carat Frequency Polygon")
ggplot(diamonds) + geom_freqpoly(aes(x = carat), binwidth = 0.02) +
scale_x_continuous(breaks = seq(0,5,0.1)) +
geom_hline(y = 2000,color = "red") +
ggtitle("Carat Frequency Polygon")
ggplot(diamonds) + geom_freqpoly(aes(x = carat), binwidth = 0.02) +
scale_x_continuous(breaks = seq(0,5,0.1)) +
geom_hline(y = 2000,color = "red") +
ggtitle("Carat Frequency Polygon")
qplot(x = carat, y= ..count../sum(..count..),
data = diamonds,
binwidth =0.01,
geom = 'freqpoly') +
scale_x_continuous(lim = c(0,3), breaks = seq(0,3,0.3))
qplot(x = carat,
data = diamonds,
binwidth =0.01,
geom = 'freqpoly') +
scale_x_continuous(lim = c(0,3), breaks = seq(0,3,0.3))
remove(diamonds)
remove(p1,p2,p3)
quit()
setwd("~/Desktop/eda-course-materials/lesson6/solutions")
getwd()
library(ggplot2)
data(diamonds)
summary(diamonds)
?coord_cartesian
ggplot(data = diamonds, aes(x = price, y= carat)) + geom_point()
summary(diamonds$carat)
summary(diamonds$price)
ggplot(data = diamonds, aes(x = price, y= carat)) + geom_point() +
coord_cartesian(xlim = (c(326, quantile(.95))))
ggplot(data = diamonds, aes(x = price, y= carat)) + geom_point() +
coord_cartesian(xlim = (c(326, quantile(0, .95))))
ggplot(data = diamonds, aes(x = price, y= carat)) + geom_point() +
coord_cartesian(xlim = (c(326, quantile(price, .95))))
ggplot(data = diamonds, aes(x = price, y= carat)) + geom_point() +
coord_cartesian(xlim = (c(326, quantile(diamonds$price, .95))))
ggplot(data = diamonds, aes(x = price, y= carat)) + geom_point() +
coord_cartesian(xlim = (c(326, quantile(diamonds$price, .99))))
ggplot(data = diamonds, aes(x = price, y= carat)) + geom_point() +
coord_cartesian(xlim = (c(326, quantile(diamonds$price, .99))), ylim = (c(.2, quantile(diamonds$carat, .99))))
ggplot(data = diamonds, aes(y = price, x= carat)) + geom_point() +
coord_cartesian(ylim = (c(326, quantile(diamonds$price, .99))), xlim = (c(.2, quantile(diamonds$carat, .99))))
volume <- diamonds(diamonds$x*diamonds$y*diamonds$z)
volume <- prod(diamonds$x*diamonds$y*diamonds$z)
remove(volume)
diamonds$volume <- prod(diamonds$x,diamonds$y,diamonds$z)
diamonds$volume(summary)
summary(diamonds$volume)
diamonds$volume <- with(diamonds, x*y*z)
summary(diamonds$volume)
View(diamonds)
summary(diamonds$x)
summary(diamonds$y)
summary(diamonds$z)
ggplot(data = diamonds, aes(x=volume, y=price)) + geom_point()
ggplot(data = diamonds, aes(y = price, x= carat)) + geom_point() +
coord_cartesian(ylim = (c(326, quantile(diamonds$price, .99))), xlim = (c(.2, quantile(diamonds$carat, .99))))
ggplot(data = diamonds, aes(y = price, x= carat)) + geom_point(alpha=0.05) +
coord_cartesian(ylim = (c(326, quantile(diamonds$price, .99))), xlim = (c(.2, quantile(diamonds$carat, .99))))
ggplot(data = diamonds, aes(x=volume, y=price)) + geom_point()
diamondsVolumeFiltered <- subset(diamonds, volume>0 & volume <= 800)
with(diamondsVolumeFiltered, cor(price, volume))
ggplot(data = diamondsVolumeFiltered, aes(x=volume, y=price)) + geom_point(alpha=0,05)
ggplot(data = diamondsVolumeFiltered, aes(x=volume, y=price))
ggplot(data = diamonds, aes(x=volume, y=price))
ggplot(data = diamonds, aes(x=volume, y=price)) + geom_point()
ggplot(data = diamondsVolumeFiltered, aes(x=volume, y=price)) + geom_point()
ggplot(data = diamondsVolumeFiltered, aes(x=volume, y=price)) + geom_point(alpha=0.05)
ggplot(data = diamondsVolumeFiltered, aes(x=volume, y=price)) + geom_point(alpha=0.05) +
stat_smooth(method = "lm")
ggplot(data = diamondsVolumeFiltered, aes(x=volume, y=price)) + geom_point(alpha=0.05) +
stat_smooth(method = "loess")
ggplot(data = diamondsVolumeFiltered, aes(x=volume, y=price)) + geom_point(alpha=0.05) +
stat_smooth(method = "loess", formula = y ~ x, size =1)
ggplot(data = diamondsVolumeFiltered, aes(x=volume, y=price)) + geom_point(alpha=0.05) +
stat_smooth(method = "lm")
ggplot(data = diamondsVolumeFiltered, aes(x=volume, y=price)) + geom_point(alpha=0.01) +
stat_smooth(method = "lm")
library(dplyr)
clarity_groups <- group_by(diamonds, clarity)
diamondsByClarity <- summarise(clarity_groups,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
diamondsByClarity <- arrange(diamondsByClarity, clarity)
head(diamondsByClarity)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
?grid.arrange
barplot(diamonds_mp_by_clarity, main = "clarity", xlab = "mean_price")
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity, y=mean_price)) + geom_line
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity, y=mean_price)) + geom_line()
grid.arrange(p1,p2,ncol=1)
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity, y=mean_price)) + geom_line()
p2 <- ggplot(data=diamonds_mp_by_color, aes(x=color, y=mean_price)) + geom_line()
grid.arrange(p1,p2,ncol=1)
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity, y=price)) + geom_line()
p2 <- ggplot(data=diamonds_mp_by_color, aes(x=color, y=price)) + geom_line()
grid.arrange(p1,p2,ncol=1)
library(gridExtra)
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity, y=mean_price)) + geom_line(stat = "identity")
p2 <- ggplot(data=diamonds_mp_by_color, aes(x=color, y=mean_price)) + geom_line(stat = "identity")
grid.arrange(p1,p2,ncol=1)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity, y=mean_price)) + geom_line(stat = "identity")
p2 <- ggplot(data=diamonds_mp_by_color, aes(x=color, y=mean_price)) + geom_line(stat = "identity")
grid.arrange(p1,p2,ncol=1)
p1 <- ggplot(aes(x = clarity, y = mean_price), data = diamonds_mp_by_clarity) +
geom_bar(stat="identity")
p2 <- ggplot(aes(x = color, y = mean_price), data = diamonds_mp_by_color) +
geom_bar(stat="identity")
library(gridExtra)
grid.arrange(p1,p2,ncol=1)
library(gridExtra)
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity, y=mean_price)) + geom_bar(stat = "identity")
p2 <- ggplot(data=diamonds_mp_by_color, aes(x=color, y=mean_price)) + geom_bar(stat = "identity")
grid.arrange(p1,p2,ncol=1)
ggplot(data = diamondsVolumeFiltered, aes(x=volume, y=price)) + geom_point(alpha=0.01) +
geom_smooth(method = "lm")
stat
ggplot(data = diamondsVolumeFiltered, aes(x=volume, y=price)) + geom_point(alpha=0.01) +
stat_smooth(method = "lm")
ggplot(data = diamondsVolumeFiltered, aes(x=volume, y=price)) + geom_point(alpha=0.01) +
geom_smooth
ggplot(data = diamondsVolumeFiltered, aes(x=volume, y=price)) + geom_point(alpha=0.01) +
geom_smooth()
exit
quit
quit()
